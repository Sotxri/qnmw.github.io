name: LaTeX to PDF Generation

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:      # Allows manual triggering

jobs:
  generate:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install MiKTeX
        run: |
          choco install miktex -y
        shell: pwsh

      - name: Setup MiKTeX Path
        run: |
          echo "C:\Program Files\MiKTeX\miktex\bin\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: pwsh

      - name: Install Essential LaTeX Packages
        run: |
          miktex --verbose packages update
           miktex --verbose packages install collection-basic
          miktex --verbose packages install collection-latex
          miktex --verbose packages install collection-latexrecommended
          miktex --verbose packages install collection-latexextra
          miktex --verbose packages install collection-fontsrecommended
          miktex --verbose packages install collection-pictures
          miktex --verbose packages install pgf
          miktex --verbose packages install tikz-qtree
          miktex --verbose packages install siunitx
          miktex --verbose packages install seqsplit
        shell: pwsh

      - name: Create Output Directories
        run: |
          mkdir -p src/demos/latex-demo/output/texExercises
          mkdir -p src/demos/latex-demo/output/texSolutions
        shell: pwsh

      - name: Generate Exercise Files for Einfuerung in die Informatik
        working-directory: src/demos/latex-demo
        run: |
          # Generate individual tex files for each exercise type
          java -jar assets/exercisegenerator.jar -a toonescompl -x embedded -c 8  -e output/texExercises/toonescompl.tex -t output/texSolutions/toonescomplsol.tex
          java -jar assets/exercisegenerator.jar -a fromonescompl -x embedded -c 8 -e output/texExercises/fromonescompl.tex -t output/texSolutions/fromonescomplsol.tex
          java -jar assets/exercisegenerator.jar -a totwoscompl -x embedded -c 8 -e output/texExercises/totwoscompl.tex -t output/texSolutions/totwoscomplsol.tex
          java -jar assets/exercisegenerator.jar -a fromtwoscompl -x embedded -c 8 -e output/texExercises/fromtwoscompl.tex -t output/texSolutions/fromtwoscomplsol.tex
          java -jar assets/exercisegenerator.jar -a fromfloat -x embedded -c 4 -d 3 -e output/texExercises/fromfloat.tex -t output/texSolutions/fromfloatsol.tex
          java -jar assets/exercisegenerator.jar -a tofloat -x embedded -c 4 -d 3 -e output/texExercises/tofloat.tex -t output/texSolutions/tofloatsol.tex
          java -jar assets/exercisegenerator.jar -a totruthtable -x embedded -l 3 -e output/texExercises/totruthtable.tex -t output/texSolutions/totruthtablesol.tex
          java -jar assets/exercisegenerator.jar -a fromtruthtable -x embedded -l 3 -e output/texExercises/fromtruthtable.tex -t output/texSolutions/fromtruthtablesol.tex
          java -jar assets/exercisegenerator.jar -a insertionsort -x embedded -l 10 -e output/texExercises/insertionsort.tex -t output/texSolutions/insertionsortsol.tex
          java -jar assets/exercisegenerator.jar -a quicksort -x embedded -l 10 -e output/texExercises/quicksort.tex -t output/texSolutions/quicksortsol.tex
          java -jar assets/exercisegenerator.jar -a mergesortWithSplitting -x embedded -l 10 -e output/texExercises/mergesortwithsplitting.tex -t output/texSolutions/mergesortwithsplittingsol.tex
          java -jar assets/exercisegenerator.jar -a binsearchtree -x embedded -l 6 -e output/texExercises/binsearchtree.tex -t output/texSolutions/binsearchtreesol.tex
          java -jar assets/exercisegenerator.jar -a avltree -x embedded -l 6 -e output/texExercises/avltree.tex -t output/texSolutions/avltreesol.tex
          java -jar assets/exercisegenerator.jar -a bfs -x embedded -e output/texExercises/bfs.tex -t output/texSolutions/bfssol.tex
          java -jar assets/exercisegenerator.jar -a dfs -x embedded -e output/texExercises/dfs.tex -t output/texSolutions/dfssol.tex
          java -jar assets/exercisegenerator.jar -a dijkstra -x embedded -l 7 -e output/texExercises/dijkstra.tex -t output/texSolutions/dijkstrasol.tex
          java -jar assets/exercisegenerator.jar -a tohuff -x embedded -d 20 -l 30 -e output/texExercises/tohuff.tex -t output/texSolutions/tohuffsol.tex
          java -jar assets/exercisegenerator.jar -a tohamming -x embedded -l 11 -e output/texExercises/tohamming.tex -t output/texSolutions/tohammingsol.tex
          java -jar assets/exercisegenerator.jar -a fromhamming -x embedded -l 15 -e output/texExercises/fromhamming.tex -t output/texSolutions/fromhammingsol.tex
          java -jar assets/exercisegenerator.jar -a hashDivision -x embedded -l 11 -e output/texExercises/hashDivision.tex -t output/texSolutions/hashDivisionsol.tex
          java -jar assets/exercisegenerator.jar -a hashDivisionLinear -x embedded -l 11 -e output/texExercises/hashDivisionLinear.tex -t output/texSolutions/hashDivisionLinearsol.tex
          java -jar assets/exercisegenerator.jar -a hashDivisionQuadratic -x embedded -l 11 -e output/texExercises/hashDivisionQuadratic.tex -t output/texSolutions/hashDivisionQuadraticsol.tex
          java -jar assets/exercisegenerator.jar -a hashMultiplication -x embedded -l 11 -e output/texExercises/hashMultiplication.tex -t output/texSolutions/hashMultiplicationsol.tex
          java -jar assets/exercisegenerator.jar -a hashMultiplicationLinear -x embedded -l 11 -e output/texExercises/hashMultiplicationLinear.tex -t output/texSolutions/hashMultiplicationLinearsol.tex
          java -jar assets/exercisegenerator.jar -a hashMultiplicationQuadratic -x embedded -l 11 -e output/texExercises/hashMultiplicationQuadratic.tex -t output/texSolutions/hashMultiplicationQuadraticsol.tex
        shell: pwsh

      - name: Generate Exercise Files for Geschaeftsprozessmanagement
        working-directory: src/demos/latex-demo
        run: |
          # Generate individual tex files for each exercise type
          java -jar assets/exercisegenerator.jar -a coverability -x embedded -e output/texExercises/coverability.tex -t output/texSolutions/coverabilitysol.tex
          java -jar assets/exercisegenerator.jar -a farkasplace -x embedded -e output/texExercises/farkasplace.tex -t output/texSolutions/farkasplacesol.tex
          java -jar assets/exercisegenerator.jar -a farkastransition -x embedded -e output/texExercises/farkastransition.tex -t output/texSolutions/farkastransitionsol.tex
        shell: pwsh

      - name: Copy and Generate PDFs (Einfuerung in die Informatik)
        working-directory: src/demos/latex-demo
        run: |
          # Copy parent tex files
          Copy-Item assets/ProbeklausurIT.tex output/
          Copy-Item assets/ProbeklausurLosungIT.tex output/
          
          # Generate PDFs
          cd output
          pdflatex -interaction=nonstopmode ProbeklausurIT.tex
          pdflatex -interaction=nonstopmode ProbeklausurLosungIT.tex
          
          # Clean up auxiliary files
          Remove-Item *.aux, *.log, *.out, *.toc -ErrorAction SilentlyContinue
        shell: pwsh

      - name: Copy and Generate PDFs (Geschaeftsprozessmanagement)
        working-directory: src/demos/latex-demo
        run: |
          # Copy parent tex files again to avoid side-effects
          Copy-Item assets/ProbeklausurGE.tex output/ProbeklausurGE.tex
          Copy-Item assets/ProbeklausurLosungGE.tex output/ProbeklausurLosungGE.tex
          
          # Optionally, you could tweak seed/parameters here if supported
          cd output
          pdflatex -interaction=nonstopmode ProbeklausurGE.tex
          pdflatex -interaction=nonstopmode ProbeklausurLosungGE.tex
          
          # Clean up auxiliary files
          Remove-Item *.aux, *.log, *.out, *.toc -ErrorAction SilentlyContinue
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mock-exam-${{ github.run_number }}
          release_name: Mock Exam ${{ github.run_number }}
          body: |
            Automatically generated mock exam and solutions
            Generated on ${{ github.event.repository.updated_at }}
          draft: false
          prerelease: false

      - name: Upload Exam PDF A
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/demos/latex-demo/output/ProbeklausurIT.pdf
          asset_name: ProbeklausurIT.pdf
          asset_content_type: application/pdf

      - name: Upload Solutions PDF A
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/demos/latex-demo/output/ProbeklausurLosungIT.pdf
          asset_name: ProbeklausurLosungIT.pdf
          asset_content_type: application/pdf

      - name: Upload Exam PDF B
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/demos/latex-demo/output/ProbeklausurGE.pdf
          asset_name: ProbeklausurGE.pdf
          asset_content_type: application/pdf

      - name: Upload Solutions PDF B
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/demos/latex-demo/output/ProbeklausurLosungGE.pdf
          asset_name: ProbeklausurLosungGE.pdf
          asset_content_type: application/pdf
